{"version":3,"sources":["webpack:///./src/styles/home.scss","webpack:///./src/styles/home.scss?4efa","webpack:///./src/js/controllers/IndexController2.js"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","locals","restaurantItemHTML","restaurant","id","address","name","neighborhood","url","_utils__WEBPACK_IMPORTED_MODULE_0__","restaurantUrl","concat","_ref","className","altText","image","Object","src","restaurantImgUrl","size","sizes","alt","restaurantImageHTML","IndexController","state","restaurants","errors","neighborhoodFilter","cuisineFilter","isLoading","map","elements","cuisineSelect","document","getElementById","filterForm","querySelector","neighborhoodSelect","restaurantsList","restaurantResult","setState","fn","prevState","this","assign","render","init","_this","fetchRestaurants","then","_ref2","catch","error","_ref3","addEventListener","handleFilterUpdates","bind","notLoadingNoErrors","_this$state","classList","add","textContent","length","html","join","innerHTML","populateFilterForm","_this$state2","neighborhoods","Set","r","cuisines","cuisine_type","_this$elements","event","stopPropagation","_this$elements2","selectedIndex","value","updateMap","markers","position","latlng","removeMarkers","addMarkers","filterRestaurants","_this$state3","filteredRestaurants","filter","populateRestaurantsList","_this$elements3","rCount","__webpack_exports__"],"mappings":"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","file":"./js/home.min.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".restaurant-filters{display:flex;flex-direction:column;background:hsla(0,0%,93%,.25);padding:.8rem}.restaurant-filters .filter-title{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.filters{display:flex;flex-direction:column}.filters .row{display:flex;padding:.4rem}.filters label{font-weight:700;flex:1 0 30%}.filters select{border:1px solid rgba(51,51,51,.35);color:#333;flex:1 0 45%}.filters select:active,.filters select:focus{background:#9affdc;border-color:#009a65;color:#333;outline:none}@media screen and (min-width:550px){.filters{flex-direction:row}.filters .row{padding:.8rem 0;margin-right:1.06667rem}.filters label{flex:1 0 auto}.filters select{margin:0 1.06667rem}}.map-container{border:1px inset rgba(51,51,51,.35);display:flex;flex:1 0 auto;max-height:40rem;min-height:40rem;overflow:hidden}.map{background-color:#e1e1e1;flex:1 0 auto;height:auto;opacity:1;position:relative;transition:opacity 1s ease}.map .map__loading{color:rgba(51,51,51,.85);display:block;font-weight:700;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%)}.infoWindow{max-width:50vmin}.infoWindow .infoWindow__title{width:100%}.infoWindow .infoWindow__image{max-width:100%}.infoWindow .infoWindow__address{font-size:1.4rem;margin-bottom:1.06667rem}.infoWindow .infoWindow__link{color:#b22200;font-weight:700;text-decoration:underline}@media screen and (min-width:550px){.infoWindow{max-width:30vmin}}.restaurants{height:auto;margin-bottom:1.6rem;padding:1.06667rem}.restaurants .restaurant-result{background:hsla(0,0%,93%,.5);border:1px solid hsla(0,0%,68%,.25);border-radius:.3rem;padding:.8rem;margin-bottom:1.6rem}.restaurants .restaurant-result .restaurant-count{font-weight:700}.restaurants-list{display:grid;grid-row-gap:3rem;grid-column-gap:3rem;grid-template-columns:repeat(auto-fill,minmax(26.2rem,1fr))}.restaurants-list__item{background:hsla(0,0%,93%,.65);border:1px solid rgba(51,51,51,.25);border-radius:2.4rem 0 2.4rem 0;box-shadow:0 0 1rem rgba(51,51,51,.5);display:flex;flex-direction:column;min-height:30rem;position:relative}.restaurants-list__item .image__container{min-height:20rem}.restaurants-list__item .restaurant-item__info{background:#eee;border-top:1px solid rgba(51,51,51,.75);border-radius:0 0 2.4rem 0;color:#333;display:flex;flex-direction:column;flex:1;justify-content:space-evenly;padding:.8rem 1.06667rem}.restaurants-list__item .restaurant-item__title{color:#333;font-size:2rem;text-align:center;text-transform:uppercase}.restaurants-list__item .star-rating__container{color:#666;flex:0 1 2.4rem;margin:0 auto}.restaurants-list__item .restaurant-item___address,.restaurants-list__item .restaurant-item__neighborhood{color:#484848;font-size:1.6rem}.restaurants-list__item .restaurant-item__review{display:block;font-size:1.6rem;font-weight:400}.restaurants-list__item .restaurant-item__detail-link{background:#b22200;border:1px solid rgba(0,0,0,.25);border-radius:.3rem;color:#fff;display:block;margin:1.6rem auto .8rem;padding:.8rem;text-align:center;transition:all .3s ease;width:50%}.restaurants-list__item .restaurant-item__detail-link:active,.restaurants-list__item .restaurant-item__detail-link:focus,.restaurants-list__item .restaurant-item__detail-link:hover{background:#ff3100;box-shadow:0 0 1.06667rem rgba(51,51,51,.9);outline:none}.image__container{border-radius:2.4rem 0 0 0;min-height:10rem;margin:0;padding:0;position:relative;min-width:100%}.image__container .restaurant-item__image{border-top-left-radius:2.4rem;display:block;max-width:100%;min-width:100%}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { DBHelper, makeImage, lazyLoadImages, populateSelectBox, Map } from '../utils';\nimport '../../styles/home.scss';\n\nconst restaurantImageHTML = ({ id, altText }, className) => {\n  const image = makeImage({\n    id,\n    src: DBHelper.restaurantImgUrl({ id, size: 'small' }),\n    sizes: '100vw',\n    alt: altText,\n    className\n  });\n\n  return `\n    <div class=\"image__container\">\n      ${image}\n    </div>\n  `;\n};\n\nconst restaurantItemHTML = restaurant => {\n  const { id, address, name, neighborhood } = restaurant;\n  const url = DBHelper.restaurantUrl(id);\n\n  // TODO: Figure out how to include star ratings\n  return `\n    <li class=\"restaurants-list__item\">\n      ${restaurantImageHTML(restaurant, 'restaurant-item__image')}\n      <div class=\"restaurant-item__info\">\n        <h2 class=\"restaurant-item__title\">${name}</h2>\n        <span class=\"restaurant-item__neighborhood\">${neighborhood}</span>\n        <address class=\"restaurant-item___address\">${address}</address>\n        <a class=\"restaurant-item__detail-link\" href=\"${url}\" title=\"View additional details about ${name}\">Details</a>\n      </div>\n    </li>\n  `;\n};\n\nconst restaurantListHTML = restaurants => {\n  return restaurants.map(restaurantItemHTML).join('');\n};\n\nconst IndexController = {\n  state: {\n    restaurants: null,\n    errors: [],\n    neighborhoodFilter: '',\n    cuisineFilter: '',\n    isLoading: true\n  },\n\n  map: null,\n\n  elements: {\n    cuisineSelect: document.getElementById('cuisine'),\n    filterForm: document.querySelector('.filters'),\n    neighborhoodSelect: document.getElementById('neighborhood'),\n    restaurantsList: document.querySelector('.restaurants-list'),\n    restaurantResult: document.querySelector('.restaurant-result')\n  },\n\n  /**\n   * Sets the state and rerenders.\n   * @param {function} fn\n   */\n  setState(fn) {\n    const prevState = this.state;\n    this.state = Object.assign(prevState, fn(prevState));\n    this.render();\n  },\n\n  /**\n   * Initiates the first render, then attempts to fetch restaurants update the state.\n   */\n  init() {\n    const { filterForm } = this.elements;\n\n    this.map = new Map(document.querySelector('.map'));\n    this.render();\n\n    DBHelper.fetchRestaurants()\n      .then(restaurants => {\n        this.setState(({ isLoading }) => ({\n          restaurants,\n          errors: [],\n          isLoading: !isLoading\n        }));\n      })\n      .catch(error => {\n        this.setState(({ errors, isLoading }) => ({\n          errors: [...errors, error],\n          isLoading: !isLoading\n        }));\n      });\n\n    filterForm.addEventListener('change', this.handleFilterUpdates.bind(this));\n  },\n\n  /**\n   * Checks if the the loading state is true or if there are errors.\n   * If loading or there are errors, it returns false. Otherwise, true.\n   * This also populates the restaurant result element depending on the state.\n   */\n  notLoadingNoErrors() {\n    const { isLoading, errors } = this.state;\n    const { restaurantResult } = this.elements;\n\n    restaurantResult.className = 'restaurant-result';\n\n    if (isLoading) {\n      restaurantResult.classList.add('info');\n      restaurantResult.textContent = 'Please wait while we whip up something delicious...';\n      return false;\n    } else if (errors && errors.length > 0) {\n      const html = errors.map(error => `<span>${error}</span>`).join('');\n      restaurantResult.classList.add('error');\n      restaurantResult.innerHTML = html;\n      return false;\n    }\n\n    return true;\n  },\n\n  populateFilterForm() {\n    const { cuisineFilter, neighborhoodFilter, restaurants } = this.state;\n    const neighborhoods = [...new Set(restaurants.map(r => r.neighborhood))];\n    const cuisines = [...new Set(restaurants.map(r => r.cuisine_type))];\n    const { neighborhoodSelect, cuisineSelect } = this.elements;\n\n    populateSelectBox(neighborhoodSelect, neighborhoods, neighborhoodFilter);\n    populateSelectBox(cuisineSelect, cuisines, cuisineFilter);\n  },\n\n  handleFilterUpdates(event) {\n    event.stopPropagation();\n\n    const { neighborhoodSelect, cuisineSelect } = this.elements;\n    const neighborhoodFilter = neighborhoodSelect[neighborhoodSelect.selectedIndex].value;\n    const cuisineFilter = cuisineSelect[cuisineSelect.selectedIndex].value;\n\n    this.setState(() => ({\n      neighborhoodFilter,\n      cuisineFilter\n    }));\n  },\n\n  updateMap(restaurants) {\n    if (!this.map) return;\n\n    const markers = restaurants.map(r => ({\n      position: r.latlng,\n      content: `\n        <div class=\"infoWindow\">\n          <h2 class=\"infoWindow__title\">${r.name}</h2>\n          <address class=\"infoWindow__address\">${r.address}</address>\n          <a href=\"${DBHelper.restaurantUrl(\n            r.id\n          )}\" class=\"infoWindow__link\" title=\"View more information about ${\n        r.name\n      }\">View Details</a>\n        </div>\n      `\n    }));\n\n    // Reset the map\n    this.map.removeMarkers();\n\n    // Add the new markers\n    this.map.addMarkers(markers);\n  },\n\n  filterRestaurants() {\n    const { cuisineFilter, neighborhoodFilter, restaurants } = this.state;\n    let filteredRestaurants = [...restaurants];\n\n    if (neighborhoodFilter && neighborhoodFilter !== '') {\n      // Filter restaurants by neighborhood\n      filteredRestaurants = filteredRestaurants.filter(r => r.neighborhood === neighborhoodFilter);\n    }\n\n    if (cuisineFilter && cuisineFilter !== '') {\n      // Filter restaurants by cuisine\n      filteredRestaurants = filteredRestaurants.filter(r => r.cuisine_type === cuisineFilter);\n    }\n\n    return filteredRestaurants;\n  },\n\n  populateRestaurantsList() {\n    const { restaurantResult, restaurantsList } = this.elements;\n    const filteredRestaurants = this.filterRestaurants();\n    const rCount = filteredRestaurants && filteredRestaurants.length;\n\n    this.updateMap(filteredRestaurants);\n    restaurantResult.innerHTML = `\n      Displaying <span class=\"restaurant-count\">${rCount}</span>\n      delicious restaurant${rCount === 1 ? '' : 's'}\n    `;\n    restaurantsList.innerHTML = restaurantListHTML(filteredRestaurants);\n    lazyLoadImages();\n  },\n\n  /**\n   * Kicks of rendering the page. It is called whenever the state is updated.\n   */\n  render() {\n    if (this.notLoadingNoErrors()) {\n      // Populate the restaurant filters\n      this.populateFilterForm();\n\n      // Populate the restaurants list and lazy load the images\n      this.populateRestaurantsList();\n    }\n  }\n};\n\nexport default IndexController;\n"],"sourceRoot":""}
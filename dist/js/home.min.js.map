{"version":3,"sources":["webpack:///./src/styles/home.scss","webpack:///./src/styles/home.scss?4efa","webpack:///./src/js/controllers/IndexController.js"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","locals","populateSelectBox","selectEl","values","docFrag","document","createDocumentFragment","optionEl","createElement","forEach","value","option","cloneNode","textContent","appendChild","createRestaurant","restaurant","avgReview","_ref","className","id","altText","imageContainer","loadingIndicator","span","li","body","name","neighborhood","address","more","classList","add","Object","_utils__WEBPACK_IMPORTED_MODULE_0__","averageReview","setAttribute","href","restaurantUrl","title","concat","append","src","restaurantImgUrl","size","sizes","alt","image","parentNode","removeChild","IndexController","map","restaurants","pageElements","cuisineSelect","getElementById","filterForm","querySelector","neighborhoodSelect","restaurantsList","restaurantResultCount","render","_this","this","fetchRestaurants","then","_this$pageElements","mobileButtonBar","populateFilterForm","populateRestaurantsList","loadMap","addEventListener","handleFilterUpdates","bind","catch","console","error","neighborhoods","Set","r","cuisines","cuisine_type","_this$pageElements2","event","_this2","_this$pageElements3","selectedIndex","cuisine","Error","filter","stopPropagation","_this$pageElements4","rCount","length","resetRestaurants","innerHTML","updateMap","_this$pageElements5","markers","position","latlng","resetMap","addMarkers","removeMarkers","__webpack_exports__"],"mappings":"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","file":"./js/home.min.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".restaurant-filters {\\n  display: flex;\\n  flex-direction: column;\\n  background: rgba(238, 238, 238, 0.25);\\n  padding: 0.8rem; }\\n  .restaurant-filters .filter-title {\\n    border: 0;\\n    clip: rect(0, 0, 0, 0);\\n    height: 1px;\\n    margin: -1px;\\n    overflow: hidden;\\n    padding: 0;\\n    position: absolute;\\n    width: 1px; }\\n\\n.filters {\\n  display: flex;\\n  flex-direction: column; }\\n  .filters .row {\\n    display: flex;\\n    padding: 0.4rem; }\\n  .filters label {\\n    font-weight: bold;\\n    flex: 1 0 30%; }\\n  .filters select {\\n    border: 1px solid rgba(51, 51, 51, 0.35);\\n    color: #333;\\n    flex: 1 0 45%; }\\n  .filters select:focus, .filters select:active {\\n    background: #9AFFDC;\\n    border-color: #009a65;\\n    color: #333;\\n    outline: none; }\\n  @media screen and (min-width: 550px) {\\n    .filters {\\n      flex-direction: row; }\\n      .filters .row {\\n        padding: 0.8rem 0;\\n        margin-right: 1.06667rem; }\\n      .filters label {\\n        flex: 1 0 auto; }\\n      .filters select {\\n        margin: 0 1.06667rem; } }\\n\\n.map-container {\\n  border: 1px inset rgba(51, 51, 51, 0.35);\\n  display: flex;\\n  flex: 1 0 auto; }\\n\\n.map {\\n  background-color: #e1e1e1;\\n  flex: 1 0 auto;\\n  height: auto;\\n  min-height: 40rem;\\n  opacity: 1;\\n  transition: opacity 1s ease; }\\n  .map .map__loading {\\n    color: rgba(51, 51, 51, 0.85);\\n    display: block;\\n    font-weight: bold;\\n    left: 50%;\\n    position: absolute;\\n    top: 50%;\\n    transform: translate(-50%, -50%); }\\n\\n/* MAP INFOWINDOWS */\\n.infoWindow {\\n  max-width: 50vmin; }\\n  .infoWindow .infoWindow__title {\\n    width: 100%; }\\n  .infoWindow .infoWindow__image {\\n    max-width: 100%; }\\n  .infoWindow .infoWindow__address {\\n    font-size: 1.4rem;\\n    margin-bottom: 1.06667rem; }\\n  .infoWindow .infoWindow__link {\\n    color: #B22200;\\n    font-weight: bold;\\n    text-decoration: underline; }\\n  @media screen and (min-width: 550px) {\\n    .infoWindow {\\n      max-width: 30vmin; } }\\n\\n.restaurants {\\n  height: auto;\\n  margin-bottom: 1.6rem;\\n  padding: 1.06667rem; }\\n  .restaurants .restaurant-count {\\n    background: rgba(238, 238, 238, 0.5);\\n    border: 1px solid rgba(174, 174, 174, 0.25);\\n    border-radius: 0.3rem;\\n    padding: 0.8rem;\\n    margin-bottom: 1.6rem; }\\n    .restaurants .restaurant-count .restaurant-count__text {\\n      font-weight: bold; }\\n\\n.restaurants-list {\\n  display: grid;\\n  grid-row-gap: 3rem;\\n  grid-column-gap: 3rem;\\n  grid-template-columns: repeat(auto-fill, minmax(26.2rem, 1fr)); }\\n\\n.restaurants-list__item {\\n  background: rgba(238, 238, 238, 0.65);\\n  border: 1px solid rgba(51, 51, 51, 0.25);\\n  border-radius: 2.4rem 0 2.4rem 0;\\n  box-shadow: 0 0 1rem rgba(51, 51, 51, 0.5);\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 30rem;\\n  position: relative; }\\n  .restaurants-list__item .image__container {\\n    min-height: 20rem; }\\n  .restaurants-list__item .restaurant-item__info {\\n    background: #eee;\\n    border-top: 1px solid rgba(51, 51, 51, 0.75);\\n    border-radius: 0 0 2.4rem 0;\\n    color: #333;\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n    justify-content: space-evenly;\\n    padding: 0.8rem 1.06667rem; }\\n  .restaurants-list__item .restaurant-item__title {\\n    color: #333;\\n    font-size: 2rem;\\n    text-align: center;\\n    text-transform: uppercase; }\\n  .restaurants-list__item .star-rating__container {\\n    color: #666666;\\n    flex: 0 1 2.4rem;\\n    margin: 0 auto; }\\n  .restaurants-list__item .restaurant-item___address,\\n  .restaurants-list__item .restaurant-item__neighborhood {\\n    color: #484848;\\n    font-size: 1.6rem; }\\n  .restaurants-list__item .restaurant-item__review {\\n    display: block;\\n    font-size: 1.6rem;\\n    font-weight: normal; }\\n  .restaurants-list__item .restaurant-item__detail-link {\\n    background: #B22200;\\n    border: 1px solid rgba(0, 0, 0, 0.25);\\n    border-radius: 0.3rem;\\n    color: white;\\n    display: block;\\n    margin: 1.6rem auto 0.8rem auto;\\n    padding: 0.8rem;\\n    text-align: center;\\n    transition: all 0.3s ease;\\n    width: 50%; }\\n  .restaurants-list__item .restaurant-item__detail-link:focus,\\n  .restaurants-list__item .restaurant-item__detail-link:active,\\n  .restaurants-list__item .restaurant-item__detail-link:hover {\\n    background: #FF3100;\\n    box-shadow: 0 0 1.06667rem rgba(51, 51, 51, 0.9);\\n    outline: none; }\\n\\n.image__container {\\n  border-radius: 2.4rem 0 0 0;\\n  min-height: 10rem;\\n  margin: 0;\\n  padding: 0;\\n  position: relative;\\n  min-width: 100%; }\\n  .image__container .restaurant-item__image {\\n    border-top-left-radius: 2.4rem;\\n    display: block;\\n    max-width: 100%;\\n    min-width: 100%; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./home.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import {\n  DBHelper,\n  lazyLoadImages,\n  makeImage, \n  makeStarRating,\n  Map,\n} from '../utils';\n\nimport '../../styles/home.scss';\n\n/**\n * Utility function to populate a select box with values.\n */\nconst populateSelectBox = (selectEl, values) => {\n  // Create a document fragment and option element\n  const docFrag = document.createDocumentFragment();\n  const optionEl = document.createElement('option');\n\n  // Add an option for each value\n  values.forEach(value => {\n    // Clone the option element\n    let option = optionEl.cloneNode();\n\n    // Set the textContent and value\n    option.textContent = value;\n    option.value = value;\n\n    // Append the option to the document fragment\n    docFrag.appendChild(option);\n  });\n\n  // Append the document fragment to the select box\n  selectEl.appendChild(docFrag);\n};\n\n/**\n * Creates an image inside of a container\n * Displays a loading spinner before the image \n * has finished loading.\n */\nconst createImage = ({ id, altText }, className) => {\n  const imageContainer = document.createElement('div');\n  const loadingIndicator = document.createElement('span');\n\n  imageContainer.className = 'image__container';\n  loadingIndicator.className = 'spinner';\n  imageContainer.appendChild(loadingIndicator);\n  imageContainer.appendChild(makeImage({\n    id,\n    src: DBHelper.restaurantImgUrl({id, size: 'small' }),\n    sizes: \"100vw\",\n    alt: altText,\n    className\n  }, image => {\n    loadingIndicator.parentNode && \n      loadingIndicator.parentNode.removeChild(loadingIndicator);\n    \n    imageContainer.appendChild(image);\n  }));\n  \n  return imageContainer;\n};\n\n/**\n * Generates the html for one restaurant list item.\n */\nconst createRestaurant = restaurant => {\n  // Create the necessary elements for later\n  const span = document.createElement('span');\n  const li = document.createElement('li');\n  const body = document.createElement('div');\n  const name = document.createElement('h2');\n  const neighborhood = span.cloneNode();\n  const address = document.createElement('address');\n  const more = document.createElement('a');\n  let avgReview;\n\n  // Give the list item a class\n  li.classList.add('restaurants-list__item');\n\n  // Content body\n  body.className = 'restaurant-item__info';\n\n  // Restaurant title\n  name.textContent = restaurant.name;\n  name.className = 'restaurant-item__title';\n\n  // Restaurant neighborhood\n  neighborhood.textContent = restaurant.neighborhood;\n  neighborhood.className = 'restaurant-item__neighborhood';\n\n  // Restaurant address\n  address.className = 'restaurant-item___address';\n  address.textContent = restaurant.address;\n\n  // Average Review\n  avgReview = makeStarRating(restaurant.averageReview);\n  avgReview.setAttribute('aria-label', 'Average review');\n\n  // View More button\n  more.textContent = 'Details';\n  more.href = DBHelper.restaurantUrl(restaurant);\n  more.title = `View additional details about ${restaurant.name}`;\n  more.className = 'restaurant-item__detail-link';\n\n  // Append content to the body\n  body.append(name);\n  body.append(avgReview);\n  body.append(neighborhood);\n  body.append(address);\n  body.append(more);\n\n  li.append(createImage(restaurant, 'restaurant-item__image'));\n  li.append(body);\n\n  return li;\n};\n\nconst IndexController = {\n  map: null,\n  restaurants: null,\n  pageElements: {\n    cuisineSelect: document.getElementById('cuisine'),\n    filterForm: document.querySelector('.filters'),\n    neighborhoodSelect: document.getElementById('neighborhood'),\n    restaurantsList: document.querySelector('.restaurants-list'),\n    restaurantResultCount: document.querySelector('.restaurant-count'),\n  },\n  \n  render() {\n    DBHelper.fetchRestaurants()\n      .then(restaurants => {\n        const { mobileButtonBar, filterForm } = this.pageElements;\n\n        // Save restaurants for later\n        this.restaurants = restaurants;\n\n        // Populate filters and display the restaurants\n        this.populateFilterForm();\n        this.populateRestaurantsList();\n        this.loadMap();\n\n        // Attach event listeners for the mobile view\n        filterForm.addEventListener('change', this.handleFilterUpdates.bind(this));\n      })\n      .catch(console.error);\n  },\n\n  populateFilterForm() {\n    const neighborhoods = [...new Set(this.restaurants.map(r => r.neighborhood))];\n    const cuisines = [...new Set(this.restaurants.map(r => r.cuisine_type))];\n    const { neighborhoodSelect, cuisineSelect } = this.pageElements;\n\n    populateSelectBox(neighborhoodSelect, neighborhoods);\n    populateSelectBox(cuisineSelect, cuisines);\n  },\n\n  handleFilterUpdates(event) {\n    const { neighborhoodSelect, cuisineSelect } = this.pageElements;\n    const neighborhood = neighborhoodSelect[neighborhoodSelect.selectedIndex].value;\n    const cuisine = cuisineSelect[cuisineSelect.selectedIndex].value;\n\n    DBHelper.fetchRestaurants()\n      .then(restaurants => {\n        if (!restaurants) throw Error('Restaurants could not be displayed');\n\n        restaurants = (cuisine !== 'all') ? \n          restaurants.filter(r => r.cuisine_type === cuisine) : \n          restaurants;\n        \n        restaurants = (neighborhood !== 'all') ?\n          restaurants.filter(r => r.neighborhood === neighborhood) :\n          restaurants;\n        \n        this.restaurants = restaurants;\n        this.populateRestaurantsList();\n      })\n      .catch(console.error);\n    \n    event.stopPropagation();\n  },\n\n  populateRestaurantsList() {\n    if (this.restaurants) {\n      const { restaurantsList, restaurantResultCount } = this.pageElements;\n      const docFrag = document.createDocumentFragment();\n      const rCount = this.restaurants.length;\n\n      this.restaurants.forEach(r => {\n        docFrag.appendChild(createRestaurant(r));\n      });\n\n      this.resetRestaurants();\n\n      restaurantsList.appendChild(docFrag);\n      restaurantResultCount.innerHTML = `\n        Displaying <span class=\"restaurant-count__text\">${rCount}</span> \n        restaurant${rCount === 1 ? '' : 's'}\n      `;\n\n      lazyLoadImages();\n      this.updateMap();\n    }\n  },\n\n  resetRestaurants() {\n    const { restaurantsList, restaurantResultCount } = this.pageElements;\n    restaurantsList.innerHTML = '';\n    restaurantResultCount.innerHTML = 'Displaying <span class=\"restaurant-count__text\">0</span> restaurants';\n  },\n\n  updateMap() {\n    if (!this.map) {\n      return;\n    }\n\n    const markers = this.restaurants.map(r => ({\n      position: r.latlng,\n      content: `\n        <div class=\"infoWindow\">\n          <h2 class=\"infoWindow__title\">${r.name}</h2>\n          <address class=\"infoWindow__address\">${r.address}</address>\n          <a href=\"${DBHelper.restaurantUrl(r)}\" class=\"infoWindow__link\" title=\"View more information about ${r.name}\">View Details</a>\n        </div>\n      `\n    }));\n\n    this.resetMap();\n    this.map.addMarkers(markers);\n  },\n\n  loadMap() {\n    this.map = new Map(document.querySelector('.map'));\n    this.restaurants && this.updateMap();\n  },\n\n  resetMap() {\n    this.map && this.map.removeMarkers();\n  }\n};\n\nexport default IndexController;\n"],"sourceRoot":""}